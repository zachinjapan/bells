{"ast":null,"code":"var _jsxFileName = \"/Users/cliffordmorin/Desktop/Coding/Coding-Projects/bells/client/src/Components/Reviews/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport \"../Reviews/Reviews.css\";\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper, Modal, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\n\nconst Reviews = () => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [reviews, setReviews] = useState([{\n    id: 2323,\n    author: \"boby\",\n    text: \"This is a review\",\n    stars: 5,\n    date: \"2020-01-01\"\n  }, {\n    id: 2311,\n    author: \"bill\",\n    text: \"This is a review\",\n    stars: 4,\n    date: \"2020-01-01\"\n  }, {\n    id: 11,\n    author: \"bob\",\n    text: \"This is a review lorem ipsum\",\n    stars: 1,\n    date: \"2020-01-01\"\n  }]);\n\n  const addReview = (author, text, stars, date) => {\n    const newReview = {\n      id: Math.random(),\n      author: author,\n      text: text,\n      stars: stars,\n      date: date\n    };\n    setReviews([...reviews, newReview]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-panel\",\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-stars\",\n          children: Array(review.stars) //.fill is a method that creates an array of the same length as the number of stars\n          .fill() //.map creates a bunch of star spans\n          .map((star, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"star\",\n            children: \"\\u2605\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-text\",\n          children: [review.text, \" -\", review.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-date\",\n          children: review.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOpen,\n        children: \"Add Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: style,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"modal-modal-title\",\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Text in a modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"modal-modal-description\",\n            sx: {\n              mt: 2\n            },\n            children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reviews, \"S0sDVJN37E/IyItyFAS6urw1ZgQ=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/cliffordmorin/Desktop/Coding/Coding-Projects/bells/client/src/Components/Reviews/Reviews.js"],"names":["React","useState","TextField","Button","Typography","Paper","Modal","Box","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Reviews","open","setOpen","handleOpen","handleClose","reviews","setReviews","id","author","text","stars","date","addReview","newReview","Math","random","map","review","Array","fill","star","i","mt"],"mappings":"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","sourcesContent":["import \"../Reviews/Reviews.css\";\nimport React, { useState } from \"react\";\nimport {TextField, Button, Typography, Paper, Modal, Box} from '@material-ui/core';\n\n const style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst Reviews = () => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const [reviews, setReviews] = useState([\n    {\n      id: 2323,\n      author: \"boby\",\n      text: \"This is a review\",\n      stars: 5,\n      date: \"2020-01-01\",\n    },\n    {\n      id: 2311,\n      author: \"bill\",\n      text: \"This is a review\",\n      stars: 4,\n      date: \"2020-01-01\",\n    },\n    {\n      id: 11,\n      author: \"bob\",\n      text: \"This is a review lorem ipsum\",\n      stars: 1,\n      date: \"2020-01-01\",\n    },\n  ]);\n\n  const addReview = (author, text, stars, date) => {\n    const newReview = {\n      id: Math.random(),\n      author: author,\n      text: text,\n      stars: stars,\n      date: date,\n    };\n\n    setReviews([...reviews, newReview]);\n  };\n\n  return (\n    <div className=\"reviews\">\n      <div className=\"review-panel\">\n        {reviews.map((review) => (\n          <div className=\"review-item\" key={review.id}>\n            <div className=\"review-stars\">\n              {Array(review.stars)\n                //.fill is a method that creates an array of the same length as the number of stars\n                .fill()\n                //.map creates a bunch of star spans\n                .map((star, i) => (\n                  <span className=\"star\">&#9733;</span>\n                ))}\n            </div>\n            <div className=\"review-text\">\n              {review.text} -{review.author}\n            </div>\n            <div className=\"review-date\">{review.date}</div>\n          </div>\n        ))}\n      </div>\n      <div>\n        {/* <button\n          onClick={() => {\n            addReview(\"bob\", \"this is a review\", 5, \"2020-01-01\");\n          }}\n        >\n          Add Review\n        </button> */}\n        <Button onClick={handleOpen}>Add Review</Button>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n          >\n          <Box sx={style}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Text in a modal\n            </Typography>\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n              Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n            </Typography>\n          </Box>\n      </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}