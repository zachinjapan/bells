{"ast":null,"code":"var _jsxFileName = \"/Users/cliffordmorin/Desktop/Coding/Coding-Projects/bells/client/src/Components/Reviews/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport \"../Reviews/Reviews.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reviews = () => {\n  _s();\n\n  const [reviews, setReviews] = useState([{\n    id: 2323,\n    author: \"boby\",\n    text: \"This is a review\",\n    stars: 5,\n    date: \"2020-01-01\"\n  }, {\n    id: 2311,\n    author: \"bill\",\n    text: \"This is a review\",\n    stars: 4,\n    date: \"2020-01-01\"\n  }, {\n    id: 11,\n    author: \"bob\",\n    text: \"This is a review lorem ipsum\",\n    stars: 1,\n    date: \"2020-01-01\"\n  }]);\n\n  const addReview = (author, text, stars, date) => {\n    const newReview = {\n      id: Math.random(),\n      author: author,\n      text: text,\n      stars: stars,\n      date: date\n    };\n    setReviews([...reviews, newReview]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-panel\",\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-stars\",\n          children: Array(review.stars) //.fill is a method that creates an array of the same length as the number of stars\n          .fill() //.map creates a bunch of star spans\n          .map((star, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"star\",\n            children: \"\\u2605\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-text\",\n          children: [review.text, \" -\", review.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-date\",\n          children: review.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addReview(\"bob\", \"this is a review\", 5, \"2020-01-01\");\n        },\n        children: \"Add Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reviews, \"RFaVQmQd42nsUZZTJcQ/J3dLNqU=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/cliffordmorin/Desktop/Coding/Coding-Projects/bells/client/src/Components/Reviews/Reviews.js"],"names":["React","useState","Reviews","reviews","setReviews","id","author","text","stars","date","addReview","newReview","Math","random","map","review","Array","fill","star","i"],"mappings":";;;AAAA,OAAO,wBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CACrC;AACEI,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,MAAM,EAAE,MAFV;AAGEC,IAAAA,IAAI,EAAE,kBAHR;AAIEC,IAAAA,KAAK,EAAE,CAJT;AAKEC,IAAAA,IAAI,EAAE;AALR,GADqC,EAQrC;AACEJ,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,MAAM,EAAE,MAFV;AAGEC,IAAAA,IAAI,EAAE,kBAHR;AAIEC,IAAAA,KAAK,EAAE,CAJT;AAKEC,IAAAA,IAAI,EAAE;AALR,GARqC,EAerC;AACEJ,IAAAA,EAAE,EAAE,EADN;AAEEC,IAAAA,MAAM,EAAE,KAFV;AAGEC,IAAAA,IAAI,EAAE,8BAHR;AAIEC,IAAAA,KAAK,EAAE,CAJT;AAKEC,IAAAA,IAAI,EAAE;AALR,GAfqC,CAAD,CAAtC;;AAwBA,QAAMC,SAAS,GAAG,CAACJ,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,KAA+B;AAC/C,UAAME,SAAS,GAAG;AAChBN,MAAAA,EAAE,EAAEO,IAAI,CAACC,MAAL,EADY;AAEhBP,MAAAA,MAAM,EAAEA,MAFQ;AAGhBC,MAAAA,IAAI,EAAEA,IAHU;AAIhBC,MAAAA,KAAK,EAAEA,KAJS;AAKhBC,MAAAA,IAAI,EAAEA;AALU,KAAlB;AAQAL,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaQ,SAAb,CAAD,CAAV;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGR,OAAO,CAACW,GAAR,CAAaC,MAAD,iBACX;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACGC,KAAK,CAACD,MAAM,CAACP,KAAR,CAAL,CACC;AADD,WAEES,IAFF,GAGC;AAHD,WAIEH,GAJF,CAIM,CAACI,IAAD,EAAOC,CAAP,kBACH;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALH;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,qBACGJ,MAAM,CAACR,IADV,QACkBQ,MAAM,CAACT,MADzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBAA8BS,MAAM,CAACN;AAArC;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA,SAAkCM,MAAM,CAACV,EAAzC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbK,UAAAA,SAAS,CAAC,KAAD,EAAQ,kBAAR,EAA4B,CAA5B,EAA+B,YAA/B,CAAT;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CArED;;GAAMR,O;;KAAAA,O;AAuEN,eAAeA,OAAf","sourcesContent":["import \"../Reviews/Reviews.css\";\nimport React, { useState } from \"react\";\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([\n    {\n      id: 2323,\n      author: \"boby\",\n      text: \"This is a review\",\n      stars: 5,\n      date: \"2020-01-01\",\n    },\n    {\n      id: 2311,\n      author: \"bill\",\n      text: \"This is a review\",\n      stars: 4,\n      date: \"2020-01-01\",\n    },\n    {\n      id: 11,\n      author: \"bob\",\n      text: \"This is a review lorem ipsum\",\n      stars: 1,\n      date: \"2020-01-01\",\n    },\n  ]);\n\n  const addReview = (author, text, stars, date) => {\n    const newReview = {\n      id: Math.random(),\n      author: author,\n      text: text,\n      stars: stars,\n      date: date,\n    };\n\n    setReviews([...reviews, newReview]);\n  };\n\n  return (\n    <div className=\"reviews\">\n      <div className=\"review-panel\">\n        {reviews.map((review) => (\n          <div className=\"review-item\" key={review.id}>\n            <div className=\"review-stars\">\n              {Array(review.stars)\n                //.fill is a method that creates an array of the same length as the number of stars\n                .fill()\n                //.map creates a bunch of star spans\n                .map((star, i) => (\n                  <span className=\"star\">&#9733;</span>\n                ))}\n            </div>\n            <div className=\"review-text\">\n              {review.text} -{review.author}\n            </div>\n            <div className=\"review-date\">{review.date}</div>\n          </div>\n        ))}\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            addReview(\"bob\", \"this is a review\", 5, \"2020-01-01\");\n          }}\n        >\n          Add Review\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}